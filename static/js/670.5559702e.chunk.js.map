{"version":3,"file":"static/js/670.5559702e.chunk.js","mappings":"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","sources":["components/Recipe/Recipe.tsx"],"sourcesContent":["import { useParams } from \"react-router-dom\";\r\nimport { useState, useEffect, FC } from \"react\";\r\nimport parse from \"html-react-parser\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { motion } from \"framer-motion\";\r\nimport \"./recipe.scss\";\r\nimport Loading from \"../Shared/Loading/Loading\";\r\nimport { Status } from \"../Shared/Loading/Loading\";\r\n\r\nexport interface Recipes {\r\n  image: string;\r\n  title: string;\r\n  summary: string;\r\n  id: number;\r\n  analyzedInstructions?: any;\r\n  cookingMinutes: number;\r\n  preparationMinutes?: number;\r\n  readyInMinutes: number;\r\n  servings: number;\r\n  extendedIngredients: any;\r\n}\r\n\r\ninterface Similar {\r\n  title: string;\r\n  image: string;\r\n  id: number;\r\n  imageType: string;\r\n}\r\n\r\nconst Recipe: FC = () => {\r\n  let { id } = useParams();\r\n  const [data, setData] = useState<Recipes | null>(null);\r\n  const [similar, setSimilar] = useState<Array<Similar> | null>(null);\r\n  const api = process.env.REACT_APP_API_URL;\r\n  const key = process.env.REACT_APP_API_KEY;\r\n  let navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    let req1 = axios.get(\r\n      `${api}recipes/${id}/information?includeNutrition=false&apiKey=${key}`\r\n    );\r\n    let req2 = axios.get(`${api}recipes/${id}/similar?number=3&apiKey=${key}`);\r\n\r\n    const fetchData = async () => {\r\n      try {\r\n        const res = await axios.all([req1, req2]);\r\n        setData(res[0].data);\r\n        setSimilar(res[1].data);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    fetchData();\r\n\r\n    return () => {\r\n      setData(null);\r\n      setSimilar(null);\r\n    };\r\n  }, [id, api, key]);\r\n\r\n  console.log(data, similar);\r\n\r\n  return (\r\n    <>\r\n      <motion.section\r\n        initial={{ opacity: 0 }}\r\n        animate={{ opacity: 1 }}\r\n        exit={{ opacity: 0 }}\r\n        transition={{ duration: 0.5 }}\r\n        className=\"recipe\"\r\n      >\r\n        {!data ? (\r\n          <Loading message={Status.quotaExceeded} />\r\n        ) : (\r\n          <>\r\n            <div className=\"img-container\">\r\n              <motion.img\r\n                initial={{ y: -400 }}\r\n                animate={{ y: 0, transition: { duration: 0.5 } }}\r\n                src={data?.image}\r\n                alt={data?.title}\r\n              />\r\n              <motion.section\r\n                initial={{ x: 1000 }}\r\n                animate={{ x: 0, transition: { delay: 0.5, duration: 0.5 } }}\r\n                className=\"cooking-time\"\r\n              >\r\n                <h5>Cooking Time</h5>\r\n                <ol className=\"time-list\">\r\n                  {data?.preparationMinutes !== -1 ? (\r\n                    <li>\r\n                      <label htmlFor=\"prep\">Prep</label>{\" \"}\r\n                      <span id=\"prep\">\r\n                        {\" \"}\r\n                        &nbsp;: {data?.preparationMinutes} minutes\r\n                      </span>\r\n                    </li>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                  {data?.cookingMinutes !== -1 ? (\r\n                    <li>\r\n                      <label htmlFor=\"cook\">Cook</label>{\" \"}\r\n                      <span id=\"cook\"> : {data?.cookingMinutes} minutes</span>\r\n                    </li>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                  <li>\r\n                    <label htmlFor=\"total\">Total</label>\r\n                    <span id=\"total\"> : {data?.readyInMinutes} minutes</span>\r\n                  </li>\r\n                  <li>\r\n                    <label htmlFor=\"serving\" className=\"serving\">\r\n                      Servings\r\n                    </label>\r\n                    <span id=\"serving\"> : {data?.servings}</span>\r\n                  </li>\r\n                </ol>\r\n              </motion.section>\r\n            </div>\r\n            <section className=\"description\">\r\n              <motion.div\r\n                initial={{ opacity: 0 }}\r\n                animate={{ opacity: 1, transition: { delay: 1.5 } }}\r\n              >\r\n                <h1 className=\"recipe-title\">{data?.title}</h1>\r\n                <p>{parse(data?.summary || \"\")}</p>\r\n              </motion.div>\r\n              <section className=\"ingredients\">\r\n                <motion.h4\r\n                  initial={{ opacity: 0 }}\r\n                  whileInView={{\r\n                    opacity: 1,\r\n                    transition: { duration: 1 },\r\n                  }}\r\n                  viewport={{ once: true }}\r\n                >\r\n                  Ingredients :\r\n                </motion.h4>\r\n                <ol className=\"ingredient-list\">\r\n                  {data?.extendedIngredients.map(\r\n                    (ingredient: any, id: number) => (\r\n                      <motion.li\r\n                        initial={{ opacity: 0 }}\r\n                        whileInView={{\r\n                          opacity: 1,\r\n                          transition: { duration: 1 },\r\n                        }}\r\n                        viewport={{ once: true }}\r\n                        key={id}\r\n                      >\r\n                        {ingredient.amount} {ingredient.unit} {ingredient.name}\r\n                      </motion.li>\r\n                    )\r\n                  )}\r\n                </ol>\r\n              </section>\r\n              <section className=\"steps\">\r\n                {!data?.analyzedInstructions[0] ? (\r\n                  \"\"\r\n                ) : (\r\n                  <>\r\n                    <motion.h4\r\n                      initial={{ opacity: 0 }}\r\n                      whileInView={{\r\n                        opacity: 1,\r\n                        transition: { duration: 0.5 },\r\n                      }}\r\n                      viewport={{ once: true }}\r\n                    >\r\n                      Instruction :\r\n                    </motion.h4>\r\n                    <ol className=\"step-list\">\r\n                      {data?.analyzedInstructions[0].steps.map(\r\n                        (s: any, id: number) => (\r\n                          <motion.li\r\n                            initial={{ opacity: 0 }}\r\n                            whileInView={{\r\n                              opacity: 1,\r\n                              transition: { duration: 1 },\r\n                            }}\r\n                            viewport={{ once: true }}\r\n                            key={id}\r\n                          >\r\n                            {s.step}\r\n                          </motion.li>\r\n                        )\r\n                      )}\r\n                    </ol>\r\n                  </>\r\n                )}\r\n              </section>\r\n            </section>\r\n            <motion.section\r\n              initial={{ opacity: 0 }}\r\n              whileInView={{\r\n                opacity: 1,\r\n                transition: { delay: 0.5 },\r\n              }}\r\n              viewport={{ once: true }}\r\n              className=\"similar\"\r\n            >\r\n              <h1>Similar Recipe</h1>\r\n              <div className=\"similar-recipe\">\r\n                {similar?.map((recipe) => (\r\n                  <motion.div\r\n                    whileHover={{ scale: 1.2 }}\r\n                    whileTap={{ scale: 1.1 }}\r\n                    className=\"container\"\r\n                    onClick={() => navigate(`/recipe/${recipe.id}`)}\r\n                    key={recipe.id}\r\n                  >\r\n                    <img\r\n                      src={`https://spoonacular.com/recipeImages/${recipe.id}-312x231.${recipe.imageType}`}\r\n                      alt={recipe.title}\r\n                    />\r\n                    <h4>{recipe.title.slice(0, 30)}...</h4>\r\n                  </motion.div>\r\n                ))}\r\n              </div>\r\n            </motion.section>\r\n          </>\r\n        )}\r\n      </motion.section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Recipe;\r\n"],"names":["id","useParams","useState","data","setData","similar","setSimilar","api","process","key","navigate","useNavigate","useEffect","req1","axios","req2","fetchData","res","console","log","motion","initial","opacity","animate","exit","transition","duration","className","y","src","image","alt","title","x","delay","preparationMinutes","htmlFor","cookingMinutes","readyInMinutes","servings","parse","summary","whileInView","viewport","once","extendedIngredients","map","ingredient","amount","unit","name","analyzedInstructions","steps","s","step","recipe","whileHover","scale","whileTap","onClick","imageType","slice","Loading","message","Status"],"sourceRoot":""}