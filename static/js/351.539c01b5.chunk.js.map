{"version":3,"file":"static/js/351.539c01b5.chunk.js","mappings":"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","sources":["components/Search/Search.tsx"],"sourcesContent":["import { useState, useRef, FC, useEffect, Suspense, lazy } from \"react\";\r\nimport { slice } from \"lodash\";\r\nimport \"./search.scss\";\r\nimport logo from \"../../logo/logo.png\";\r\nimport { motion } from \"framer-motion\";\r\nimport { BsSearch } from \"react-icons/bs\";\r\nimport Loading, { Status } from \"../Shared/Loading/Loading\";\r\nimport axios from \"axios\";\r\nconst RecipeCard = lazy(() => import(\"../Shared/Recipe-Card/RecipeCard\"));\r\nexport interface SearchRecipe {\r\n  id: number;\r\n  title: string;\r\n  image: string;\r\n}\r\n\r\nconst Search: FC = () => {\r\n  const [data, setData] = useState<Array<SearchRecipe> | null>(null);\r\n  const [clicked, setClicked] = useState<boolean>(false);\r\n  const [total, setTotal] = useState<number | null>(null);\r\n  const [error, setError] = useState<boolean | null>(null);\r\n  const [isEmpty, setIsEmpty] = useState<boolean>(true);\r\n  const [index, setIndex] = useState<number>(0);\r\n  const [isCompleted, setIsCompleted] = useState<boolean>(false);\r\n  const inputRef = useRef<HTMLInputElement | null>(null);\r\n  const bodyRef = useRef<HTMLDivElement | null>(null);\r\n  const secondBodyRef = useRef<HTMLDivElement | null>(null);\r\n  const api = process.env.REACT_APP_API_URL;\r\n  const key = process.env.REACT_APP_API_KEY;\r\n  let initialPost = slice(data, 0, index);\r\n  const [query, setQuery] = useState<string | undefined>(\r\n    inputRef.current?.value\r\n  );\r\n\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      try {\r\n        if (inputRef.current?.value.trim().length !== 0) {\r\n          console.log(inputRef.current?.value);\r\n          setIsEmpty(false);\r\n\r\n          const res = await axios.get(\r\n            `${api}recipes/complexSearch?query=${query}&number=${index}&apiKey=${key}`\r\n          );\r\n          setData(res.data.results);\r\n          setTotal(res.data.totalResults);\r\n\r\n          if (bodyRef.current?.style) {\r\n            bodyRef.current.style.overflow = \"scroll\";\r\n          }\r\n        } else {\r\n          setIsEmpty(true);\r\n        }\r\n      } catch (error) {\r\n        console.log(error);\r\n        setError(true);\r\n      }\r\n    };\r\n    getData();\r\n  }, [index, query, api, key]);\r\n\r\n  const loadMore = () => {\r\n    setIndex(index + 10);\r\n    console.log(index);\r\n    if (total) {\r\n      if (index >= total) {\r\n        setIsCompleted(true);\r\n      } else {\r\n        setIsCompleted(false);\r\n      }\r\n    }\r\n  };\r\n  console.log(index);\r\n  return (\r\n    <motion.section\r\n      initial={{ opacity: 0 }}\r\n      animate={{ opacity: 1 }}\r\n      exit={{ opacity: 0 }}\r\n      transition={{ duration: 0.5 }}\r\n      className=\"latest\"\r\n      ref={bodyRef}\r\n    >\r\n      <section className=\"search-bar\">\r\n        <img src={logo} alt=\"logo\" />\r\n        <div className=\"input-container\">\r\n          <input id=\"input-form\" ref={inputRef} type=\"text\" />\r\n          <div\r\n            className=\"search-icon\"\r\n            onClick={() => {\r\n              setClicked(true);\r\n              setIndex(10);\r\n              setQuery(inputRef.current?.value);\r\n            }}\r\n          >\r\n            <motion.div whileTap={{ scale: 0.2 }} className=\"icon\">\r\n              <BsSearch />\r\n            </motion.div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n      {error ? (\r\n        <Loading message={Status.quotaExceeded} />\r\n      ) : clicked && isEmpty ? (\r\n        <Loading message={Status.empty} />\r\n      ) : data && total === 0 && clicked ? (\r\n        <Loading message={Status.notFound} />\r\n      ) : data ? (\r\n        <>\r\n          <div className=\"card-body-container\">\r\n            <section className=\"card-container\" ref={secondBodyRef}>\r\n              {initialPost.length > 0\r\n                ? initialPost.map((recipe) => (\r\n                    <Suspense fallback={<Loading message={Status.isLoading} />}>\r\n                      <RecipeCard\r\n                        id={recipe.id}\r\n                        title={recipe.title}\r\n                        image={recipe.image}\r\n                        key={recipe.id}\r\n                      />\r\n                    </Suspense>\r\n                  ))\r\n                : null}\r\n            </section>\r\n          </div>\r\n          {!isCompleted ? (\r\n            <div className=\"button-container\">\r\n              <motion.button\r\n                whileTap={{ scale: 1.1 }}\r\n                type=\"button\"\r\n                className=\"btn-loadmore\"\r\n                onClick={() => loadMore()}\r\n              >\r\n                Load More\r\n              </motion.button>\r\n            </div>\r\n          ) : null}\r\n        </>\r\n      ) : null}\r\n    </motion.section>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n"],"names":["RecipeCard","lazy","useState","data","setData","clicked","setClicked","total","setTotal","error","setError","isEmpty","setIsEmpty","index","setIndex","isCompleted","setIsCompleted","inputRef","useRef","bodyRef","secondBodyRef","api","process","key","initialPost","slice","current","value","query","setQuery","useEffect","getData","trim","length","console","log","axios","res","results","totalResults","style","overflow","motion","initial","opacity","animate","exit","transition","duration","className","ref","src","logo","alt","id","type","onClick","whileTap","scale","Loading","message","Status","map","recipe","Suspense","fallback","title","image"],"sourceRoot":""}