{"version":3,"file":"static/js/548.ed803243.chunk.js","mappings":"uNA8BA,EA7BiB,CACfA,MAAM,EACNC,UAAU,EACVC,MAAM,EACNC,UAAU,EACVC,cAAe,IACfC,MAAO,IACPC,aAAc,EACdC,eAAgB,EAChBC,WAAW,SAAC,MAAY,IACxBC,WAAW,SAAC,MAAW,IACvBC,WAAY,CACV,CACEC,WAAY,IACZC,SAAU,CACRC,QAAQ,IAGZ,CACEF,WAAY,IACZC,SAAU,CACRC,QAAQ,EACRP,aAAc,EACdC,eAAgB,MCbxB,EAXqB,CACnBO,QAAS,CACPC,OAAQ,OACRC,WAAY,CAAEC,MAAO,GAAKC,KAAM,iBAAkBC,SAAU,IAE9DC,OAAQ,CACNL,OAAQ,OACRC,WAAY,CAAEC,MAAO,GAAKC,KAAM,iBAAkBC,SAAU,K,oBCqBhE,EAvB+B,SAACE,GAC9B,IAAIC,GAAWC,EAAAA,EAAAA,MACf,OACE,+BACE,qBAASC,UAAU,gBAAe,WAChC,mBACEA,UAAU,aACVC,QAAS,kBAAMH,EAAS,WAAD,OAAYD,EAAMK,IAAK,EAAC,8BAIjD,qBAASF,UAAU,UAAS,WAC1B,wBAAKH,EAAMM,SACX,0BAAIC,EAAAA,EAAAA,IAAMP,EAAMQ,QAAQC,MAAM,EAAG,MAAK,cAExC,oBAASN,UAAU,UAAS,UAC1B,gBAAKO,IAAKV,EAAMW,MAAOC,IAAKZ,EAAMM,cAK5C,E,oBCmDA,EAhEkC,SAAH,GAAkB,IAAZO,EAAI,EAAJA,KACnC,GAA4BC,EAAAA,EAAAA,WAAkB,GAAM,eAA7Cf,EAAM,KAAEgB,EAAS,KACxBC,QAAQC,IAAIJ,GACZ,IAAMK,EAAe,WACfC,OAAOC,WAAa,IACtBL,GAAU,GAEVA,GAAU,EAEd,EAUA,OARAM,EAAAA,EAAAA,YAAU,WAGR,OAFAH,IACAC,OAAOG,iBAAiB,SAAUJ,GAC3B,WACLC,OAAOI,oBAAoB,SAAUL,EACvC,CACF,GAAG,KAGD,SAACM,EAAA,UAAc,CACbC,QAAS,CAAEC,QAAS,GACpBC,QAAS,CAAED,QAAS,GACpBE,KAAM,CAAEF,QAAS,GACjB/B,WAAY,CAAEG,SAAU,IACxBK,UAAU,UACVE,GAAG,UAAS,SAEVQ,GAGA,qBAASV,UAAU,iBAAgB,WACjC,SAACqB,EAAA,SAAa,CACZC,QAAS,CAAE/B,OAAQ,SACnBmC,SAAUC,EACVH,QAAS5B,EAAS,SAAW,UAC7BI,UAAU,aAAY,UAEtB,SAACqB,EAAA,KAAS,CACRC,QAAS,CAAEM,GAAI,KACfJ,QAAS,CAAEI,EAAG,EAAGpC,WAAY,CAAEC,MAAO,MAAQ,4BAKlD,gBAAKO,UAAU,UAAS,UACtB,SAAC,KAAM,kBAAKZ,GAAQ,aACb,OAAJsB,QAAI,IAAJA,OAAI,EAAJA,EAAMmB,KAAI,SAACC,GAAM,OAChB,SAAC,EAAI,CACH3B,MAAO2B,EAAE3B,MACTK,MAAOsB,EAAEtB,MACTN,GAAI4B,EAAE5B,GACNG,QAASyB,EAAEzB,SACNyB,EAAE5B,GACP,aAzBV,SAAC6B,EAAA,EAAO,CAACC,QAASC,EAAAA,EAAAA,iBAiC1B,C","sources":["components/Shared/slickSettings.js","components/Popular/popularAnimation.js","components/Shared/Card/Card.tsx","components/Popular/Popular.tsx"],"sourcesContent":["import { ImArrowLeft, ImArrowRight } from \"react-icons/im\";\r\nconst settings = {\r\n  dots: true,\r\n  infinite: true,\r\n  fade: true,\r\n  autoplay: true,\r\n  autoplaySpeed: 3000,\r\n  speed: 500,\r\n  slidesToShow: 1,\r\n  slidesToScroll: 1,\r\n  nextArrow: <ImArrowRight />,\r\n  prevArrow: <ImArrowLeft />,\r\n  responsive: [\r\n    {\r\n      breakpoint: 600,\r\n      settings: {\r\n        arrows: false,\r\n      },\r\n    },\r\n    {\r\n      breakpoint: 480,\r\n      settings: {\r\n        arrows: false,\r\n        slidesToShow: 1,\r\n        slidesToScroll: 1,\r\n      },\r\n    },\r\n  ],\r\n};\r\n\r\nexport default settings;\r\n","let headerVariants = {\r\n  dekstop: {\r\n    height: \"20vh\",\r\n    transition: { delay: 0.5, when: \"beforeChildren\", duration: 1 },\r\n  },\r\n  mobile: {\r\n    height: \"10vh\",\r\n    transition: { delay: 0.5, when: \"beforeChildren\", duration: 1 },\r\n  },\r\n};\r\n\r\nexport default headerVariants;\r\n","import { RandomRecipe } from \"../../Popular/Popular\";\r\nimport parse from \"html-react-parser\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { FC } from \"react\";\r\nimport \"./card.scss\";\r\nconst Card: FC<RandomRecipe> = (props) => {\r\n  let navigate = useNavigate();\r\n  return (\r\n    <>\r\n      <section className=\"cardContainer\">\r\n        <button\r\n          className=\"btn-detail\"\r\n          onClick={() => navigate(`/recipe/${props.id}`)}\r\n        >\r\n          See this recipe\r\n        </button>\r\n        <section className=\"summary\">\r\n          <h2>{props.title}</h2>\r\n          <p>{parse(props.summary.slice(0, 350))}....</p>\r\n        </section>\r\n        <section className=\"cardImg\">\r\n          <img src={props.image} alt={props.title} />\r\n        </section>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import { FC, useEffect, useState } from \"react\";\r\nimport Slider from \"react-slick\";\r\nimport settings from \"../Shared/slickSettings\";\r\nimport headerVariants from \"./popularAnimation\";\r\nimport \"./popular.scss\";\r\nimport Card from \"../Shared/Card/Card\";\r\nimport { motion } from \"framer-motion\";\r\nimport Loading, { Status } from \"../Shared/Loading/Loading\";\r\n\r\nexport interface RandomRecipe {\r\n  [key: string]: any;\r\n}\r\n\r\nconst Popular: FC<RandomRecipe> = ({ data }) => {\r\n  const [mobile, setMobile] = useState<boolean>(false);\r\n  console.log(data);\r\n  const handleResize = () => {\r\n    if (window.innerWidth < 768) {\r\n      setMobile(true);\r\n    } else {\r\n      setMobile(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    handleResize();\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => {\r\n      window.removeEventListener(\"resize\", handleResize);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <motion.section\r\n      initial={{ opacity: 0 }}\r\n      animate={{ opacity: 1 }}\r\n      exit={{ opacity: 0 }}\r\n      transition={{ duration: 0.5 }}\r\n      className=\"popular\"\r\n      id=\"popular\"\r\n    >\r\n      {!data ? (\r\n        <Loading message={Status.quotaExceeded} />\r\n      ) : (\r\n        <section className=\"main-container\">\r\n          <motion.header\r\n            initial={{ height: \"100vh\" }}\r\n            variants={headerVariants}\r\n            animate={mobile ? \"mobile\" : \"dekstop\"}\r\n            className=\"mainHeader\"\r\n          >\r\n            <motion.h1\r\n              initial={{ x: -400 }}\r\n              animate={{ x: 1, transition: { delay: 1.5 } }}\r\n            >\r\n              Popular Now\r\n            </motion.h1>\r\n          </motion.header>\r\n          <div className=\"content\">\r\n            <Slider {...settings}>\r\n              {data?.map((s: any) => (\r\n                <Card\r\n                  title={s.title}\r\n                  image={s.image}\r\n                  id={s.id}\r\n                  summary={s.summary}\r\n                  key={s.id}\r\n                />\r\n              ))}\r\n            </Slider>\r\n          </div>\r\n        </section>\r\n      )}\r\n    </motion.section>\r\n  );\r\n};\r\n\r\nexport default Popular;\r\n"],"names":["dots","infinite","fade","autoplay","autoplaySpeed","speed","slidesToShow","slidesToScroll","nextArrow","prevArrow","responsive","breakpoint","settings","arrows","dekstop","height","transition","delay","when","duration","mobile","props","navigate","useNavigate","className","onClick","id","title","parse","summary","slice","src","image","alt","data","useState","setMobile","console","log","handleResize","window","innerWidth","useEffect","addEventListener","removeEventListener","motion","initial","opacity","animate","exit","variants","headerVariants","x","map","s","Loading","message","Status"],"sourceRoot":""}